(()=>{class t extends Error{response;request;options;constructor(t,e,s){const o=`${t.status||0===t.status?t.status:""} ${t.statusText||""}`.trim();super(`Request failed with ${o?`status code ${o}`:"an unknown error"}: ${e.method} ${e.url}`),this.name="HTTPError",this.response=t,this.request=e,this.options=s}}class e extends Error{request;constructor(t){super(`Request timed out: ${t.method} ${t.url}`),this.name="TimeoutError",this.request=t}}const s=t=>null!==t&&"object"==typeof t,o=(...t)=>{for(const e of t)if((!s(e)||Array.isArray(e))&&void 0!==e)throw new TypeError("The `options` argument must be an object");return i({},...t)},r=(t={},e={})=>{const s=new globalThis.Headers(t),o=e instanceof globalThis.Headers,r=new globalThis.Headers(e);for(const[t,e]of r.entries())o&&"undefined"===e||void 0===e?s.delete(t):s.set(t,e);return s};function a(t,e,s){return Object.hasOwn(e,s)&&void 0===e[s]?[]:i(t[s]??[],e[s]??[])}const n=(t={},e={})=>({beforeRequest:a(t,e,"beforeRequest"),beforeRetry:a(t,e,"beforeRetry"),afterResponse:a(t,e,"afterResponse"),beforeError:a(t,e,"beforeError")}),i=(...t)=>{let e={},o={},a={};for(const p of t)if(Array.isArray(p))Array.isArray(e)||(e=[]),e=[...e,...p];else if(s(p)){for(let[t,o]of Object.entries(p))s(o)&&t in e&&(o=i(e[t],o)),e={...e,[t]:o};s(p.hooks)&&(a=n(a,p.hooks),e.hooks=a),s(p.headers)&&(o=r(o,p.headers),e.headers=o)}return e},p=(()=>{let t=!1,e=!1;const s="function"==typeof globalThis.ReadableStream,o="function"==typeof globalThis.Request;if(s&&o)try{e=new globalThis.Request("https://empty.invalid",{body:new globalThis.ReadableStream,method:"POST",get duplex(){return t=!0,"half"}}).headers.has("Content-Type")}catch(t){if(t instanceof Error&&"unsupported BodyInit type"===t.message)return!1;throw t}return t&&!e})(),h="function"==typeof globalThis.AbortController,l="function"==typeof globalThis.ReadableStream,u="function"==typeof globalThis.FormData,c=["get","post","put","patch","head","delete"],d={json:"application/json",text:"text/*",formData:"multipart/form-data",arrayBuffer:"*/*",blob:"*/*"},f=2147483647,m=Symbol("stop"),y={json:!0,parseJson:!0,stringifyJson:!0,searchParams:!0,prefixUrl:!0,retry:!0,timeout:!0,hooks:!0,throwHttpErrors:!0,onDownloadProgress:!0,fetch:!0},g={method:!0,headers:!0,body:!0,mode:!0,credentials:!0,cache:!0,redirect:!0,referrer:!0,referrerPolicy:!0,integrity:!0,keepalive:!0,signal:!0,window:!0,dispatcher:!0,duplex:!0,priority:!0},w=t=>c.includes(t)?t.toUpperCase():t,b={limit:2,methods:["get","put","head","delete","options","trace"],statusCodes:[408,413,429,500,502,503,504],afterStatusCodes:[413,429,503],maxRetryAfter:Number.POSITIVE_INFINITY,backoffLimit:Number.POSITIVE_INFINITY,delay:t=>.3*2**(t-1)*1e3},_=(t={})=>{if("number"==typeof t)return{...b,limit:t};if(t.methods&&!Array.isArray(t.methods))throw new Error("retry.methods must be an array");if(t.statusCodes&&!Array.isArray(t.statusCodes))throw new Error("retry.statusCodes must be an array");return{...b,...t}};async function R(t,s,o,r){return new Promise(((a,n)=>{const i=setTimeout((()=>{o&&o.abort(),n(new e(t))}),r.timeout);r.fetch(t,s).then(a).catch(n).then((()=>{clearTimeout(i)}))}))}async function v(t,{signal:e}){return new Promise(((s,o)=>{function r(){clearTimeout(a),o(e.reason)}e&&(e.throwIfAborted(),e.addEventListener("abort",r,{once:!0}));const a=setTimeout((()=>{e?.removeEventListener("abort",r),s()}),t)}))}const P=(t,e)=>{const s={};for(const o in e)o in g||o in y||o in t||(s[o]=e[o]);return s};class S{static create(e,s){const o=new S(e,s),r=async()=>{if("number"==typeof o._options.timeout&&o._options.timeout>f)throw new RangeError("The `timeout` option cannot be greater than 2147483647");await Promise.resolve();let e=await o._fetch();for(const t of o._options.hooks.afterResponse){const s=await t(o.request,o._options,o._decorateResponse(e.clone()));s instanceof globalThis.Response&&(e=s)}if(o._decorateResponse(e),!e.ok&&o._options.throwHttpErrors){let s=new t(e,o.request,o._options);for(const t of o._options.hooks.beforeError)s=await t(s);throw s}if(o._options.onDownloadProgress){if("function"!=typeof o._options.onDownloadProgress)throw new TypeError("The `onDownloadProgress` option must be a function");if(!l)throw new Error("Streams are not supported in your environment. `ReadableStream` is missing.");return o._stream(e.clone(),o._options.onDownloadProgress)}return e},a=o._options.retry.methods.includes(o.request.method.toLowerCase())?o._retry(r):r();for(const[t,e]of Object.entries(d))a[t]=async()=>{o.request.headers.set("accept",o.request.headers.get("accept")||e);const r=await a;if("json"===t){if(204===r.status)return"";if(0===(await r.clone().arrayBuffer()).byteLength)return"";if(s.parseJson)return s.parseJson(await r.text())}return r[t]()};return a}request;abortController;_retryCount=0;_input;_options;constructor(t,e={}){if(this._input=t,this._options={...e,headers:r(this._input.headers,e.headers),hooks:n({beforeRequest:[],beforeRetry:[],beforeError:[],afterResponse:[]},e.hooks),method:w(e.method??this._input.method??"GET"),prefixUrl:String(e.prefixUrl||""),retry:_(e.retry),throwHttpErrors:!1!==e.throwHttpErrors,timeout:e.timeout??1e4,fetch:e.fetch??globalThis.fetch.bind(globalThis)},"string"!=typeof this._input&&!(this._input instanceof URL||this._input instanceof globalThis.Request))throw new TypeError("`input` must be a string, URL, or Request");if(this._options.prefixUrl&&"string"==typeof this._input){if(this._input.startsWith("/"))throw new Error("`input` must not begin with a slash when using `prefixUrl`");this._options.prefixUrl.endsWith("/")||(this._options.prefixUrl+="/"),this._input=this._options.prefixUrl+this._input}if(h){this.abortController=new globalThis.AbortController;const t=this._options.signal??this._input.signal;t?.aborted&&this.abortController.abort(t?.reason),t?.addEventListener("abort",(()=>{this.abortController.abort(t.reason)})),this._options.signal=this.abortController.signal}if(p&&(this._options.duplex="half"),void 0!==this._options.json&&(this._options.body=this._options.stringifyJson?.(this._options.json)??JSON.stringify(this._options.json),this._options.headers.set("content-type",this._options.headers.get("content-type")??"application/json")),this.request=new globalThis.Request(this._input,this._options),this._options.searchParams){const t="?"+("string"==typeof this._options.searchParams?this._options.searchParams.replace(/^\?/,""):new URLSearchParams(this._options.searchParams).toString()),e=this.request.url.replace(/(?:\?.*?)?(?=#|$)/,t);!(u&&this._options.body instanceof globalThis.FormData||this._options.body instanceof URLSearchParams)||this._options.headers&&this._options.headers["content-type"]||this.request.headers.delete("content-type"),this.request=new globalThis.Request(new globalThis.Request(e,{...this.request}),this._options)}}_calculateRetryDelay(s){if(this._retryCount++,this._retryCount>this._options.retry.limit||s instanceof e)throw s;if(s instanceof t){if(!this._options.retry.statusCodes.includes(s.response.status))throw s;const t=s.response.headers.get("Retry-After")??s.response.headers.get("RateLimit-Reset")??s.response.headers.get("X-RateLimit-Reset")??s.response.headers.get("X-Rate-Limit-Reset");if(t&&this._options.retry.afterStatusCodes.includes(s.response.status)){let e=1e3*Number(t);Number.isNaN(e)?e=Date.parse(t)-Date.now():e>=Date.parse("2024-01-01")&&(e-=Date.now());const s=this._options.retry.maxRetryAfter??e;return e<s?e:s}if(413===s.response.status)throw s}const o=this._options.retry.delay(this._retryCount);return Math.min(this._options.retry.backoffLimit,o)}_decorateResponse(t){return this._options.parseJson&&(t.json=async()=>this._options.parseJson(await t.text())),t}async _retry(t){try{return await t()}catch(e){const s=Math.min(this._calculateRetryDelay(e),f);if(this._retryCount<1)throw e;await v(s,{signal:this._options.signal});for(const t of this._options.hooks.beforeRetry){if(await t({request:this.request,options:this._options,error:e,retryCount:this._retryCount})===m)return}return this._retry(t)}}async _fetch(){for(const t of this._options.hooks.beforeRequest){const e=await t(this.request,this._options);if(e instanceof Request){this.request=e;break}if(e instanceof Response)return e}const t=P(this.request,this._options),e=this.request;return this.request=e.clone(),!1===this._options.timeout?this._options.fetch(e,t):R(e,t,this.abortController,this._options)}_stream(t,e){const s=Number(t.headers.get("content-length"))||0;let o=0;return 204===t.status?(e&&e({percent:1,totalBytes:s,transferredBytes:o},new Uint8Array),new globalThis.Response(null,{status:t.status,statusText:t.statusText,headers:t.headers})):new globalThis.Response(new globalThis.ReadableStream({async start(r){const a=t.body.getReader();e&&e({percent:0,transferredBytes:0,totalBytes:s},new Uint8Array),await async function t(){const{done:n,value:i}=await a.read();if(n)r.close();else{if(e){o+=i.byteLength;e({percent:0===s?0:o/s,transferredBytes:o,totalBytes:s},i)}r.enqueue(i),await t()}}()}}),{status:t.status,statusText:t.statusText,headers:t.headers})}}const T=t=>{const e=(e,s)=>S.create(e,o(t,s));for(const s of c)e[s]=(e,r)=>S.create(e,o(t,r,{method:s}));return e.create=t=>T(o(t)),e.extend=e=>("function"==typeof e&&(e=e(t??{})),T(o(t,e))),e.stop=m,e};var q=T();const I=async t=>{const e=t.pageInfo?.offset||0,s=new URL("https://sepiasearch.org/api/v1/search/video-channels");s.searchParams.append("search",t.query),s.searchParams.append("count",15..toString()),s.searchParams.append("start",e.toString());const o=await q.get(s.toString()).json();return{items:o.data.map((t=>({name:t.name,apiId:`${t.name}@${t.host}`,images:t.avatar&&t.avatar.url?[{url:t.avatar.url}]:void 0}))),pageInfo:{totalResults:o.total,resultsPerPage:15,offset:e}}},N=t=>{const e=`https://${t.channel.host}`,s=`${t.channel.name}@${t.channel.host}`;return{title:t.name,apiId:`${t.account.host}_${t.uuid}`,duration:t.duration,views:t.views,likes:t.likes,dislikes:t.dislikes,description:t.description,uploadDate:"string"==typeof t.createdAt?t.createdAt:t.createdAt.toISOString(),channelName:t.channel.displayName,channelApiId:s,images:[{url:`${e}${t.thumbnailPath}`}]}},$=async t=>{const e=t.pageInfo?.offset||0,s=new URL("https://sepiasearch.org/api/v1/search/videos");if(s.searchParams.append("search",t.query),s.searchParams.append("count",15..toString()),s.searchParams.append("start",e.toString()),s.searchParams.append("nsfw","false".toString()),t.filterInfo?.filters){t.filterInfo.filters.forEach((t=>{switch(t.id){case"startDate":const e=(t=>{const e=864e5;switch(t){case"today":return new Date(Date.now()-e).toISOString();case"week":return new Date(Date.now()-7*e).toISOString();case"month":return new Date(Date.now()-30*e).toISOString();case"year":return new Date(Date.now()-365*e).toISOString()}})(t.value);e&&s.searchParams.append("startDate",e);break;case"duration":const o=(t=>{switch(t){case"short":return[void 0,240];case"medium":return[240,600];case"long":return[600,void 0]}})(t.value);o&&(o[0]&&s.searchParams.append("durationMin",o[0].toString()),o[1]&&s.searchParams.append("durationMax",o[1].toString()));break;case"sort":s.searchParams.append("sort",t.value||"-match")}}))}else s.searchParams.append("sort","-match");const o=await q.get(s.toString()).json();return{items:o.data.map(N),pageInfo:{totalResults:o.total,resultsPerPage:15,offset:e},filterInfo:{filters:[{id:"sort",type:"select",displayName:"Sort by",value:"-match",options:[{displayName:"Best match",value:"-match"},{displayName:"Most recent",value:"-publishedAt"},{displayName:"Least recent",value:"publishedAt"}]},{id:"startDate",type:"radio",displayName:"Published Date",value:"",options:[{displayName:"Any",value:""},{displayName:"Last 24 Hours",value:"today"},{displayName:"Last 7 days",value:"week"},{displayName:"Last 30 days",value:"month"},{displayName:"Last 365 days",value:"year"}]},{id:"duration",type:"radio",displayName:"Duration",value:"",options:[{displayName:"Any",value:""},{displayName:"Short (< 4 min)",value:"short"},{displayName:"Medium (4-10 min)",value:"medium"},{displayName:"Long (> 10 min)",value:"long"}]}]}}};application.onUiMessage=async t=>{if("endvideo"===t.type)application.endVideo()};application.onSearchAll=async t=>{const e=$(t),s=I(t),o=(async t=>{const e=t.pageInfo?.offset||0,s=new URL("https://sepiasearch.org/api/v1/search/video-playlists");s.searchParams.append("search",t.query),s.searchParams.append("count",15..toString()),s.searchParams.append("start",e.toString());const o=await q.get(s.toString()).json();return{items:o.data.map((t=>({name:t.displayName,apiId:`${t.ownerAccount.host}_${t.uuid}`,images:t.thumbnailUrl?[{url:t.thumbnailUrl}]:void 0}))),pageInfo:{totalResults:o.total,resultsPerPage:15,offset:e}}})(t),[r,a,n]=await Promise.all([e,s,o]);return{videos:r,channels:a,playlists:n}},application.onSearchVideos=$,application.onSearchChannels=I,application.onGetChannelVideos=async t=>{const e=t.pageInfo?.offset||0,s=t.apiId||"",[o,r]=s.split("@"),a=`/api/v1/video-channels/${t.apiId}/videos`,n=new URL(`https://${r}${a}`);n.searchParams.append("count",15..toString()),n.searchParams.append("start",e.toString());const i=await q.get(n.toString()).json();return{items:i.data.map(N),pageInfo:{totalResults:i.total,resultsPerPage:15,offset:e}}},application.onGetPlaylistVideos=async t=>{const e=t.pageInfo?.offset||0,s=t.apiId||"",[o,r]=s.split("_"),a=new URL(`https://${o}${`/api/v1/video-playlists/${r}/videos`}`);a.searchParams.append("count",15..toString()),a.searchParams.append("start",e.toString());const n=await q.get(a.toString()).json();return{items:n.data.map((t=>t.video)).filter((t=>!!t)).map(N),pageInfo:{totalResults:n.total,resultsPerPage:15,offset:e}}},application.onGetVideo=async t=>{const[e,s]=t.apiId.split("_"),o=`https://${e}${`/api/v1/videos/${s}`}`,r=await q.get(o).json();return N(r)}})();